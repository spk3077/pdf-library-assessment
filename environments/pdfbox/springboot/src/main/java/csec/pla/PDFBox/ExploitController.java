package csec.pla.PDFBox;

import java.io.File;
import java.io.IOException;
import java.util.List;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDDocumentInformation;
import org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.common.PDRectangle;
import org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation;
import org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup;

@RestController
public class ExploitController {

	private void createPDF()  {
		PDDocument doc = new PDDocument();
		PDDocumentInformation pdd = doc.getDocumentInformation();
		pdd.setAuthor("JavaTpoint");
		pdd.setTitle("My Document");
		pdd.setCreator("SSSIT");
		pdd.setSubject("PDF Example");
 		pdd.setKeywords("Java, example, my pdf");
		pdd.setProducer("JavaTpoint.com");

		PDPage page = new PDPage();

		PDImageXObject pdImage = PDImageXObject.createFromFile("/images/xref.jpg", doc);
		PDPageContentStream contents = new PDPageContentStream(doc, page);
		contents.drawImage(pdImage, 250, 300);
		contents.close();

		PDPageContentStream contentStream = new PDPageContentStream(doc, page);
		contentStream.beginText();
		contentStream.newLineAtOffset(20, 450);
		contentStream.showText("ShowText");
    	contentStream.endText();
  		contentStream.close();

		PDAnnotationTextMarkup txtMark = new PDAnnotationTextMarkup(PDAnnotationTextMarkup.SUB_TYPE_HIGHLIGHT);
		PDRectangle position = new PDRectangle(); // Set the position of the annotation
		position.setLowerLeftX(100);
		position.setLowerLeftY(700);
		position.setUpperRightX(250);
		position.setUpperRightY(750);
		txtMark.setRectangle(position);
		float[] quads = new float[8];
		quads[0] = position.getLowerLeftX();  // x1
		quads[1] = position.getLowerLeftY();  // y1
		quads[2] = position.getUpperRightX(); // x2
		quads[3] = position.getLowerLeftY();  // y2
		quads[4] = position.getLowerLeftX();  // x3
		quads[5] = position.getUpperRightY(); // y3
		quads[6] = position.getUpperRightX(); // x4
		quads[7] = position.getUpperRightY(); // y4
		txtMark.setQuadPoints(quads);
		txtMark.setContents("Highlighted text");
		List<PDAnnotation> annotations = page.getAnnotations();
		annotations.add(txtMark);

		doc.addPage(page);
		doc.save("/pdfs/test.pdf");
		doc.close();

		// File file = new File("Path of Document");   
    	// PDDocument doc = PDDocument.load(file);   

	}
    
    @GetMapping("/")
	public String index() {
		return "Greetings from Spring Boot!";
	}

	@GetMapping("/injection")
	public String injection() {
		return "PDF File Created!";
	}

	@GetMapping("/buffer")
	public String buffer() {
		return "Greetings from Spring Boot!";
	}

	@GetMapping("/os")
	public String os() {
		return "Greetings from Spring Boot!";
	}
}
